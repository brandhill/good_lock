// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require angular.min
//= require date
//= require idangerous.swiper-2.1.min
//= require picker/picker
//= require picker/picker.date
//= require picker/picker.time
//= require picker/legacy
//= require_tree .

Date.prototype.toISOLocalDateTimeString = function() {
    var padDigits = function padDigits(number, digits) {
        return Array(Math.max(digits - String(number).length + 1, 0)).join(0) + number;
    }

    var tzOffset = this.getTimezoneOffset() + 30 * -1,
        tzHour = padDigits( Math.floor(tzOffset / 60), 2 ),
        tzMin = padDigits( (tzOffset % 60), 2 ),
        tz = "";

    tz = tzHour > 0 ? "+" : "-";
    tz = tz + tzHour + ":" + tzMin;

    return this.getFullYear() 
            + "-" + padDigits((this.getMonth()+1),2) 
            + "-" + padDigits(this.getDate(),2) 
            + "T" 
            + padDigits(this.getHours(),2)
            + ":" + padDigits(this.getMinutes(),2)
            + ":" + padDigits(this.getSeconds(),2)
            + "." + padDigits(this.getMilliseconds(),2)
            + "Z";
}

var token = '';
var refresh_token = '';
var useremail = '';
var calendarSwiper = {};

var app = angular.module('app', []);

app.service('Events', ['$http', function ($http) {

   this.getByDate = function (date) {
      
      var day_start = Date.parse(date);
      day_start.set({
         millisecond: 0,
         second: 0,
         minute: 0,
         hour: 0
      });

      var day_end = Date.parse(date);
      day_end.set({
         millisecond: 999,
         second: 59,
         minute: 59,
         hour: 23
      });

      $http({
         method: 'GET',
         url: 'https://www.googleapis.com/calendar/v3/calendars/' + useremail + '/events',
         headers: {
            Authorization: 'Bearer ' + token
         },
         params: {
            timeMin: day_start.toISOLocalDateTimeString(),
            timeMax: day_end.toISOLocalDateTimeString(),
            singleEvents: true
         }
      })
      .success(function (data, status, headers, config) {
         
         var CalCtrlEl = angular.element($('#calendar-page'));
         var scope = CalCtrlEl.scope();
         //scope.pushEvents(data.items);
         console.log(data.items);
         
      })
      .error(function (data, status, headers, config) {
      });
      
   };

}]);

app.service('Swiper', ['$http', function ($http) {

   this.rebuild = function (swipe_to) {

      setTimeout(function () {
         calendarSwiper.destroy();
         calendarSwiper = new Swiper('.swiper-container',{
            centeredSlides: true,
            slidesPerView: 'auto',
            pagination: '.pagination',
            paginationClickable: true,
            initialSlide: swipe_to,
            autoResize: false
         }); 
         var initWidth = parseInt($(".swiper-wrapper").css("width"))+300;
         $(".swiper-wrapper").css("width", initWidth+"px");
         calendarSwiper.swipeTo(swipe_to);
      }, 200);

   };

}]);

app.controller('LoginCtrl', ['$scope', function ($scope) {

   $scope.googleOauth2 = function () {
      window.location.href = "/auth/google_oauth2";
   };

}]);

app.controller('CalCtrl', ['$scope', function ($scope) {

}]);

app.controller('CalHeaderCtrl', ['$scope', function ($scope) {

   $scope.openSettings = function () {

      var calendarPage = angular.element($('#calendar-page'));
      var settingsPage = angular.element($('#settings-page'));

      if (settingsPage.hasClass('hide') && !calendarPage.hasClass('hide')) {
         // open settings
         settingsPage.removeClass('hide');
         settingsPage.removeClass('animated fadeOutDownBig');
         settingsPage.addClass('slideUp');
         setTimeout(function () {
            calendarPage.addClass('hide');
         }, 1500);
         
      }
 
   };

}]);

app.controller('CalFooterCtrl', ['$scope', 'Events', 'Swiper', function ($scope, Events, Swiper) {

   var today = Date.today();
   $scope.datebtns = [];

   for (var i=10; i>=1; i--) {
      var date = Date.today().add(-i).days();
      $scope.datebtns.push(
         {
            date_format: date.toString("yyyy-MM-dd"),
            month: date.toString("MMM"),
            date: date.toString("d"),
            day: date.toString("ddd")
         }
      );
   }

   $scope.datebtns.push(
      {
         date_format: today.toString("yyyy-MM-dd"),
         month: today.toString("MMM"),
         date: today.toString("d"),
         day: today.toString("ddd")
      }
   );

   for (var i=1; i<=10; i++) {
      var date = Date.today().add(i).days();
      $scope.datebtns.push(
         {
            date_format: date.toString("yyyy-MM-dd"),
            month: date.toString("MMM"),
            date: date.toString("d"),
            day: date.toString("ddd")
         }
      );
   }

   $scope.callEventsgetByDate = function (current_active) {
      Events.getByDate($scope.datebtns[current_active].date_format);
   }

   $scope.swipeToSlide = function(index) {
      calendarSwiper.swipeTo(index);
   }

   $scope.addPreTenDay = function () {
      
      console.log('addPreTenDay');
      var currentMinDay = Date.parse($scope.datebtns[0].date_format);
      for (var i=1; i<=10; i++) {
         var date = currentMinDay.add(-1).days();
         $scope.datebtns.unshift(
            {
               date_format: date.toString("yyyy-MM-dd"),
               month: date.toString("MMM"),
               date: date.toString("d"),
               day: date.toString("ddd")
            }
         );
      }

      var init_swip_to = calendarSwiper.activeIndex+10;
      Swiper.rebuild(init_swip_to);
   
   };

   $scope.addNextTenDay = function () {
      
      console.log('addNextTenDay');
      var currentMaxIndex = $scope.datebtns.length-1;
      var currentMaxDay = Date.parse($scope.datebtns[currentMaxIndex].date_format);
      for (var i=1; i<=10; i++) {
         var date = currentMaxDay.add(1).days();
         $scope.datebtns.push(
            {
               date_format: date.toString("yyyy-MM-dd"),
               month: date.toString("MMM"),
               date: date.toString("d"),
               day: date.toString("ddd")
            }
         );
      }

      var init_swip_to = calendarSwiper.activeIndex;
      Swiper.rebuild(init_swip_to);
      
   };

}]);

app.controller('SettingsCtrl', ['$scope', function ($scope) {

   $scope.settings = {};
   $scope.settings.accounts = [{
      "account": "TWITTER",
      "color": "#3684C4",
      "is_connect": false
   },{
      "account": "YAHOO! NEWS",
      "color": "#4700A5",
      "is_connect": true
   },{
      "account": "FLICKR",
      "color": "#FF0084",
      "is_connect": true
   },{
      "account": "TUMBLR",
      "color": "#5F9AC4",
      "is_connect": false
   },{
      "account": "PLURK",
      "color": "#CF682F",
      "is_connect": false
   },{
      "account": "GOOGLE+",
      "color": "#D95131",
      "is_connect": true
   }];

   $scope.connectAccount = function (index) {
      if ($scope.settings.accounts[index].is_connect == true) {
         $scope.settings.accounts[index].is_connect = false;  
      } else {
         $scope.settings.accounts[index].is_connect = true;  
      }
   };

}]);

app.controller('SettingsHeaderCtrl', ['$scope', function ($scope) {

   $scope.closeSettings = function () {

      var calendarPage = angular.element($('#calendar-page'));
      var settingsPage = angular.element($('#settings-page'));

      if (calendarPage.hasClass('hide') && !settingsPage.hasClass('hide')) {
         // close settings
         calendarPage.removeClass('hide');
         settingsPage.removeClass('slideUp'); 
         settingsPage.addClass('animated fadeOutDownBig');
         setTimeout(function () {
            settingsPage.addClass('hide');
         }, 1500);
          
      }

   };

}]);

function triggerActiveDate() {

   var CalFooterCtrlEl = angular.element($('#calendar-footer'));;
   var scope = CalFooterCtrlEl.scope();
   scope.callEventsgetByDate(calendarSwiper.activeIndex);

   if ((scope.datebtns.length-calendarSwiper.activeIndex)<7) {
      scope.addNextTenDay();
   }

   if ((calendarSwiper.activeIndex)<6) {
      scope.addPreTenDay();
   }

}

$(function(){

   if ($('.swiper-container').length) {

      calendarSwiper = new Swiper('.swiper-container',{
         centeredSlides: true,
         slidesPerView: 'auto',
         pagination: '.pagination',
         paginationClickable: true,
         autoResize: false
      });
      calendarSwiper.swipeTo(10);
      calendarSwiper.wrapperTransitionEnd(triggerActiveDate, true);
      var initWidth = parseInt($(".swiper-wrapper").css("width"))+300;
      $(".swiper-wrapper").css("width", initWidth+"px");

   }

})

$(function(){

   if ($('#open-calendar-button').length) {

      $('#open-calendar-button').pickadate({
         
         // Any false-y value will hide the button.
         today: '',
         clear: 'Close',
         onOpen: function() {
            //console.log('Opened up!');
            $('#calendar-footer').css('z-index', 400);
         },
         onClose: function() {
            //console.log('Closed now')
            $('#calendar-footer').css('z-index', 500);
         },
         onRender: function() {
            //console.log('Just rendered anew')
         },
         onStart: function() {
            //console.log('Hello there :)')
         },
         onStop: function() {
            //console.log('See ya')
         },
         onSet: function(thingSet) {
            
            if (typeof(thingSet.select) !== "undefined") {
               var date = new Date(thingSet.select);
               var CalHeaderCtrlEl = angular.element($('#calendar-header'));
               var scope = CalHeaderCtrlEl.scope();
               //scope.callEventsByFilter(date.toString("yyyy-MM-dd"));   
            }
            
         }

      })

   }

})